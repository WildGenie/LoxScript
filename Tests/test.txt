/* testing print, operator precedence, number and string constants. PASS
print test + 1;
print "hello world";
print (-1 + 2) * 3 - -4;*/

/* testing assignment. PASS
var a = 1;
Invalid assignment should fail. PASS
var a = 1; var b = 2; var c = 3; var d = 4; a * b = c + d;*/

/* testing local variables. PASS
var a = "global";
{
    var a = "outer";
    {
        var a = "inner";
        print a;
    }
    print a;
}
print a;*/

/* testing if. PASS
if (true) {
    print 1;
}
else {
    print 2;
}*/

/* testing and/or. PASS
if (true and true) { print "correct"; }
else { print "true and true incorrect"; }
if (false and false) { print "false and false incorrect"; }
else { print "correct"; }
if (false and true) { print "false and true incorrect"; }
else { print "correct"; }
if (false or true) { print "correct"; }
else { print "false or true incorrect"; }
if (true and false) { print "true and false incorrect"; }
else { print "correct"; }
if (true or false) { print "correct"; }
else { print "true or false incorrect"; }*/

// === Loop Statement: PASS ==================================================
/*print "Loop Test: Should count from 0-9";
var i = 0;
while (i < 100) {
    print i;
    i = i + 1;
}*/

// === For Statement: PASS ===================================================
/*print "For Test: Should count from 0-9";
for (var i = 0; i < 10; i = i + 1) { print i; }
print "For Test: Should count from 0-9";
for (var i = 0; i < 10; i = i + 1) { print i; }*/

// === Functions: TEST =======================================================
fun sum(a, b, c) {
    return a + b + c;
}
print 4 + sum(50, 60, 70);

/*fun areWeHavingItYet(n) {
  print "Yes we are!";
}
areWeHavingItYet("Are we having fun yet?");
print areWeHavingItYet;*/

// === Functions and Fibonacci Benchmark =====================================
/*fun fibonacci(n) {
  if (n <= 1) return n;
  return fibonacci(n - 2) + fibonacci(n - 1);
}

for (var i = 0; i < 5; i = i + 1) {
  print fibonacci(i);
}*/

// testing assignment of field on expression. FAIL
// menu.brunch(sunday).beverage = "mimosa";
